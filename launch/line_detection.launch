<launch>
    <arg name="incoming_image" default="/camera/image_raw"/>
    <arg name="incoming_homographied_image" default="/warped_image"/>
    <arg name="camera_info" default="/camera/camera_info"/>
    <arg name="homography_topic" default="/camera/camera_homography"/>
    <arg name="odometry_topic" default="/visual_odom/odom"/>
    <arg name="driving_line_topic" default="/driving_line"/>
    <arg name="detected_intersection_topic" default="/detected_intersections"/>
    <arg name="environment_model_topic" default="/environment_model" />
    <arg name="debug" default="false"/>
    <arg name="use_nodelet" default="false"/>
    <arg name="nodelet_manager" default=""/>
    <arg name="line_detection_debug_image_topic" default="/line_detection_debug_image"/>

    <!-- forward output to [screen|log] -->
    <arg name="output" default="screen"/>

    <arg if="$(arg debug)" name="launch-prefix" value="gdb -ex run --args"/>
    <arg unless="$(arg debug)" name="launch-prefix" value=""/>

    <group unless="$(arg use_nodelet)">
        <node name="line_detection" pkg="drive_ros_image_recognition" type="line_detection_node" respawn="false" output="$(arg output)" launch-prefix="$(arg launch-prefix)">
            <remap from="img_in" to="$(arg incoming_image)"/>
            <remap from="homographied_img_in" to="$(arg incoming_homographied_image)"/>
            <remap from="camera_info" to="$(arg camera_info)"/>
            <remap from="/line_detection/odom_topic" to="$(arg odometry_topic)"/>
            <remap from="homography_in" to="$(arg homography_topic)"/>
            <remap from="driving_line_topic" to="$(arg driving_line_topic)"/>
          	<remap from="environment_model_topic" to="$(arg environment_model_topic)" /> 
            <remap from="detected_intersection_topic" to="$(arg detected_intersection_topic)" />
            <remap from="debug_image" to="$(arg line_detection_debug_image_topic)"/>
            <rosparam command="load" file="$(find drive_ros_image_recognition)/config/homography.yaml"/>
        </node>
    </group>

    <group if="$(arg use_nodelet)">
        <arg if="$(eval arg('nodelet_manager') == '')" name="manager_used" value="road_detection_nodelet_manager"/>
        <arg unless="$(eval arg('nodelet_manager') == '')" name="manager_used" value="$(arg nodelet_manager)"/>

        <node if="$(eval arg('nodelet_manager') == '')" pkg="nodelet" type="nodelet" name="$(arg manager_used)"  args="manager" output="$(arg output)"/>
        <node pkg="nodelet" type="nodelet" name="street_crossing_detection_nodelet" args="load drive_ros_image_recognition/RoadDetectionNodelet $(arg manager_used)" output="$(arg output)" launch-prefix="$(arg launch-prefix)">
            <remap from="homographied_img_in" to="$(arg incoming_homographied_image)"/>
            <remap from="camera_info" to="$(arg camera_info)"/>
            <remap from="/line_detection/odom_topic" to="$(arg odometry_topic)"/>
            <remap from="homography_in" to="$(arg homography_topic)"/>
            <remap from="driving_line_topic" to="$(arg driving_line_topic)"/>
            <remap from="environment_model_topic" to="$(arg environment_model_topic)" />
            <remap from="detected_intersection_topic" to="$(arg detected_intersection_topic)" />
            <remap from="debug_image" to="$(arg line_detection_debug_image_topic)"/>
            <rosparam command="load" file="$(find drive_ros_image_recognition)/config/homography.yaml"/>
        </node>
    </group>

</launch>
